"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _types = require("./types");

var ActionCreators = {
  changeTrack: function changeTrack(index) {
    return {
      type: _types.ActionTypes.CHANGE_TRACK,
      payload: {
        index: index
      }
    };
  },
  play: function play() {
    return {
      type: _types.ActionTypes.PLAY
    };
  },
  pause: function pause() {
    return {
      type: _types.ActionTypes.PAUSE
    };
  },
  stop: function stop() {
    return {
      type: _types.ActionTypes.STOP
    };
  },
  updatePlaylist: function updatePlaylist(playlist) {
    return {
      type: _types.ActionTypes.UPDATE_PLAYLIST,
      payload: {
        playlist: playlist
      }
    };
  },
  shuffle: function shuffle(bool) {
    return {
      type: _types.ActionTypes.SHUFFLE,
      payload: {
        shuffle: bool
      }
    };
  },
  setCurrentTime: function setCurrentTime(currentTime) {
    return {
      type: _types.ActionTypes.SET_CURRENT_TIME,
      payload: {
        currentTime: currentTime
      }
    };
  },
  setTimeLeft: function setTimeLeft(timeLeft) {
    return {
      type: _types.ActionTypes.SET_TIME_LEFT,
      payload: {
        timeLeft: timeLeft
      }
    };
  },
  seek: function seek(progress) {
    return {
      type: _types.ActionTypes.SEEK,
      payload: {
        progress: progress
      }
    };
  },
  setVolume: function setVolume(volume) {
    return {
      type: _types.ActionTypes.CHANGE_VOLUME,
      payload: {
        volume: volume
      }
    };
  },
  setRepeatMode: function setRepeatMode(mode) {
    return {
      type: _types.ActionTypes.SET_REPEAT_MODE,
      payload: {
        mode: mode
      }
    };
  },
  skipNext: function skipNext() {
    return {
      type: _types.ActionTypes.SKIP_NEXT
    };
  },
  skipPrev: function skipPrev() {
    return {
      type: _types.ActionTypes.SKIP_PREV
    };
  }
};
var _default = ActionCreators;
exports.default = _default;