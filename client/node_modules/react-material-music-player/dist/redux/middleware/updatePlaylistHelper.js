"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _actionCreators = _interopRequireDefault(require("../actionCreators.js"));

var _types = require("../types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var updatePlaylistHelper = function updatePlaylistHelper(store) {
  return function (next) {
    return function (action) {
      if (action.type !== _types.ActionTypes.UPDATE_PLAYLIST) return next(action); // store prev playlist and new playlist

      var _store$getState = store.getState(),
          playlist = _store$getState.playlist,
          currentTrack = _store$getState.currentTrack;

      var newPlaylist = action.payload.playlist; // update state with new playlist

      var result = next(action); // check if playlist changed

      var playlistChanged = false;
      if (newPlaylist.length !== playlist.length) playlistChanged = true;else for (var i = 0; i < playlist.length; i++) {
        if (newPlaylist[i].ID !== playlist[i].ID) {
          playlistChanged = true;
          break;
        }
      } // if playlist changed look for current track

      if (playlistChanged) {
        var newCurrentTrack = -1;

        for (var _i = 0; _i < newPlaylist.length; _i++) {
          if (newPlaylist[_i].ID === playlist[currentTrack].ID) {
            newCurrentTrack = _i;
            break;
          }
        } // if not found then its completely playlist, update current track to 0


        if (newCurrentTrack === -1) store.dispatch(_actionCreators.default.changeTrack(0));else store.dispatch(_actionCreators.default.changeTrack(newCurrentTrack)); // else update current track
      }

      return result;
    };
  };
};

var _default = updatePlaylistHelper;
exports.default = _default;